syntax = "proto3";

package protos.fira.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/opencorelabs/fira/gen/protos/go/protos/v1;v1";

// Accounts can be created within one of these namespaces.
enum AccountNamespace {
  ACCOUNT_NAMESPACE_UNSPECIFIED = 0;
  ACCOUNT_NAMESPACE_DEVELOPER = 1;
  ACCOUNT_NAMESPACE_CONSUMER = 2;
}

enum AccountCredentialType {
  ACCOUNT_CREDENTIAL_TYPE_UNSPECIFIED = 0;
  ACCOUNT_CREDENTIAL_TYPE_EMAIL = 1;
  ACCOUNT_CREDENTIAL_TYPE_OAUTH_GITHUB = 2;
}

enum AccountRegistrationStatus {
  ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED = 0;
  ACCOUNT_REGISTRATION_STATUS_VERIFY_EMAIL = 1;
  ACCOUNT_REGISTRATION_STATUS_OK = 2;
  ACCOUNT_REGISTRATION_STATUS_ERROR = 99;
}

message Account {
  AccountNamespace namespace = 2;
  AccountRegistrationStatus status = 3;
  AccountCredentialType credential_type = 4;

  string id = 20;

  // The account holder's name.
  string name = 22;

  // The account holder's email.
  string email = 23;

  // The account holder's avatar URL.
  string avatar_url = 24;

  // The account creation timestamp.
  google.protobuf.Timestamp created_at = 50;

  // The account last updated timestamp.
  google.protobuf.Timestamp updated_at = 51;
}

message CredentialTypeEmail {
  // The email address to use for the account.
  string email = 1;

  // The password to use for the account.
  string password = 2;

  // This will be used for building the URL in the verification email.
  // For example, with a base URL of "https://myapp.net" will the link in the verification email will a "verification_token"
  // URL argument appended to it: "http://myapp.net?verification_token=zxb38rjs9nh"
  // Use only for registration or re-verification
  string verification_base_url = 3;

  // Common name for the new account i.e. "Jane Smith" - provide if the credential type is email.
  // Use only for registration.
  string name = 4;

  // If true, re-send the email verification.
  bool verify = 5;
}

message CredentialTypeGithub {
  // Public client ID for the GitHub OAuth app - must match the client secret stored on the server.
  string client_id = 1;

  // The redirect URI configured for the GitHub OAuth app.
  string redirect_uri = 2;

  // The OAuth code returned by GitHub after the user has authorized the app.
  string code = 3;
}

message LoginCredential {
  AccountCredentialType credential_type = 1;
  CredentialTypeEmail email_credential = 2;
  CredentialTypeGithub github_credential = 3;
}