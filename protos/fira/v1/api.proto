syntax = "proto3";

package protos.fira.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/opencorelabs/fira/gen/protos/go/protos/v1;v1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Fira API";
    version: "1.0.0";
    contact: {
      name: "Open Core Labs";
      url: "https://github.com/opencorelabs/fira";
      email: "pnwx@opencorelabs.org";
    };
    license: {
      name: "GNU Affero General Public License v3.0";
      url: "https://github.com/opencorelabs/fira/blob/main/LICENSE";
    };
  };
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "ApiKeyAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "X-API-Key";
      }
    }
  }
};

message GetApiInfoRequest {}

message GetApiInfoResponse {
  message Version {
    int32 major = 1;
    int32 minor = 2;
    int32 patch = 3;
  }

  Version version = 1;
}

// Mark: Common messages

enum LinkSessionStatus {
  LINK_SESSION_STATUS_UNSPECIFIED = 0;
  LINK_SESSION_STATUS_CREATED = 1;
  LINK_SESSION_STATUS_IN_PROGRESS = 2;
  LINK_SESSION_STATUS_COMPLETE = 3;
  LINK_SESSION_STATUS_FAILED = 4;
}

message LinkError {}

// A link session represents an attempt by a user to connect to their financial institution, select accounts,
// and provide consent to data sharing.
message LinkSession {
  // The link ID. Use in URL to fetch status.
  string link_id = 1;

  // The configured redirect URI
  string redirect_uri = 2;

  // The configured connection to reconnect.
  string connection_id = 3;

  // Status of the current link. A timed out link will show up as failed.
  LinkSessionStatus status = 4;

  // If the link failed, this will be the LinkError object
  LinkError error = 5;

  // If the link was successful, this will be the resulting Connection object.
  Connection connection = 6;
}

message Connection {}

/// Mark: Request/Response messages

message CreateLinkSessionRequest {
  // This is the URL that will be redirected to once the user session is comp
  string redirect_uri = 1;
  // Use connection_id when reconnecting a lapsed connection.
  string connection_id = 2;
}

message CreateLinkSessionResponse {
  LinkSession link_session = 1;
}

message GetLinkSessionRequest {
  string link_id = 1;
}

message GetLinkSessionResponse {
  LinkSession link_session = 1;
}

service FiraService {
  rpc GetApiInfo(GetApiInfoRequest) returns (GetApiInfoResponse) {
    option (google.api.http) = {get: "/api/v1/info"};
  }

  // Create a new link session. This will return a URL to redirect the user to where they will be able to select a
  // financial institution to connect to and log in.
  rpc CreateLinkSession(CreateLinkSessionRequest) returns (CreateLinkSessionResponse) {
    option (google.api.http) = {
      post: "/api/v1/link"
      body: "*"
      response_body: "link_session"
    };
  }

  // Retrieve the status of a link session.
  rpc GetLinkSession(GetLinkSessionRequest) returns (GetLinkSessionResponse) {
    option (google.api.http) = {
      get: "/api/v1/link/{link_id}"
      response_body: "link_session"
    };
  }
}