// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: protos/fira/v1/api.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LinkSessionStatus int32

const (
	LinkSessionStatus_LINK_SESSION_STATUS_UNSPECIFIED LinkSessionStatus = 0
	LinkSessionStatus_LINK_SESSION_STATUS_CREATED     LinkSessionStatus = 1
	LinkSessionStatus_LINK_SESSION_STATUS_IN_PROGRESS LinkSessionStatus = 2
	LinkSessionStatus_LINK_SESSION_STATUS_COMPLETE    LinkSessionStatus = 3
	LinkSessionStatus_LINK_SESSION_STATUS_FAILED      LinkSessionStatus = 4
)

// Enum value maps for LinkSessionStatus.
var (
	LinkSessionStatus_name = map[int32]string{
		0: "LINK_SESSION_STATUS_UNSPECIFIED",
		1: "LINK_SESSION_STATUS_CREATED",
		2: "LINK_SESSION_STATUS_IN_PROGRESS",
		3: "LINK_SESSION_STATUS_COMPLETE",
		4: "LINK_SESSION_STATUS_FAILED",
	}
	LinkSessionStatus_value = map[string]int32{
		"LINK_SESSION_STATUS_UNSPECIFIED": 0,
		"LINK_SESSION_STATUS_CREATED":     1,
		"LINK_SESSION_STATUS_IN_PROGRESS": 2,
		"LINK_SESSION_STATUS_COMPLETE":    3,
		"LINK_SESSION_STATUS_FAILED":      4,
	}
)

func (x LinkSessionStatus) Enum() *LinkSessionStatus {
	p := new(LinkSessionStatus)
	*p = x
	return p
}

func (x LinkSessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkSessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_fira_v1_api_proto_enumTypes[0].Descriptor()
}

func (LinkSessionStatus) Type() protoreflect.EnumType {
	return &file_protos_fira_v1_api_proto_enumTypes[0]
}

func (x LinkSessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkSessionStatus.Descriptor instead.
func (LinkSessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{0}
}

type GetApiInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetApiInfoRequest) Reset() {
	*x = GetApiInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiInfoRequest) ProtoMessage() {}

func (x *GetApiInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiInfoRequest.ProtoReflect.Descriptor instead.
func (*GetApiInfoRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{0}
}

type GetApiInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *GetApiInfoResponse_Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetApiInfoResponse) Reset() {
	*x = GetApiInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiInfoResponse) ProtoMessage() {}

func (x *GetApiInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiInfoResponse.ProtoReflect.Descriptor instead.
func (*GetApiInfoResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetApiInfoResponse) GetVersion() *GetApiInfoResponse_Version {
	if x != nil {
		return x.Version
	}
	return nil
}

type LinkError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LinkError) Reset() {
	*x = LinkError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkError) ProtoMessage() {}

func (x *LinkError) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkError.ProtoReflect.Descriptor instead.
func (*LinkError) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{2}
}

// A link session represents an attempt by a user to connect to their financial institution, select accounts,
// and provide consent to data sharing.
type LinkSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The link ID. Use in URL to fetch status.
	LinkId string `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	// The configured redirect URI
	RedirectUri string `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	// The configured connection to reconnect.
	ConnectionId string `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// Status of the current link. A timed out link will show up as failed.
	Status LinkSessionStatus `protobuf:"varint,4,opt,name=status,proto3,enum=protos.fira.v1.LinkSessionStatus" json:"status,omitempty"`
	// If the link failed, this will be the LinkError object
	Error *LinkError `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	// If the link was successful, this will be the resulting Connection object.
	Connection *Connection `protobuf:"bytes,6,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *LinkSession) Reset() {
	*x = LinkSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkSession) ProtoMessage() {}

func (x *LinkSession) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkSession.ProtoReflect.Descriptor instead.
func (*LinkSession) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *LinkSession) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

func (x *LinkSession) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *LinkSession) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *LinkSession) GetStatus() LinkSessionStatus {
	if x != nil {
		return x.Status
	}
	return LinkSessionStatus_LINK_SESSION_STATUS_UNSPECIFIED
}

func (x *LinkSession) GetError() *LinkError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *LinkSession) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{4}
}

type CreateLinkSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the URL that will be redirected to once the user session is comp
	RedirectUri string `protobuf:"bytes,1,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	// Use connection_id when reconnecting a lapsed connection.
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *CreateLinkSessionRequest) Reset() {
	*x = CreateLinkSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLinkSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLinkSessionRequest) ProtoMessage() {}

func (x *CreateLinkSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLinkSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateLinkSessionRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLinkSessionRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *CreateLinkSessionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type CreateLinkSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkSession *LinkSession `protobuf:"bytes,1,opt,name=link_session,json=linkSession,proto3" json:"link_session,omitempty"`
}

func (x *CreateLinkSessionResponse) Reset() {
	*x = CreateLinkSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLinkSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLinkSessionResponse) ProtoMessage() {}

func (x *CreateLinkSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLinkSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateLinkSessionResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{6}
}

func (x *CreateLinkSessionResponse) GetLinkSession() *LinkSession {
	if x != nil {
		return x.LinkSession
	}
	return nil
}

type GetLinkSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId string `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
}

func (x *GetLinkSessionRequest) Reset() {
	*x = GetLinkSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinkSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkSessionRequest) ProtoMessage() {}

func (x *GetLinkSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkSessionRequest.ProtoReflect.Descriptor instead.
func (*GetLinkSessionRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetLinkSessionRequest) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

type GetLinkSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkSession *LinkSession `protobuf:"bytes,1,opt,name=link_session,json=linkSession,proto3" json:"link_session,omitempty"`
}

func (x *GetLinkSessionResponse) Reset() {
	*x = GetLinkSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinkSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkSessionResponse) ProtoMessage() {}

func (x *GetLinkSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkSessionResponse.ProtoReflect.Descriptor instead.
func (*GetLinkSessionResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetLinkSessionResponse) GetLinkSession() *LinkSession {
	if x != nil {
		return x.LinkSession
	}
	return nil
}

type GetApiInfoResponse_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major int32 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor int32 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch int32 `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
}

func (x *GetApiInfoResponse_Version) Reset() {
	*x = GetApiInfoResponse_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiInfoResponse_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiInfoResponse_Version) ProtoMessage() {}

func (x *GetApiInfoResponse_Version) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiInfoResponse_Version.ProtoReflect.Descriptor instead.
func (*GetApiInfoResponse_Version) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetApiInfoResponse_Version) GetMajor() int32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *GetApiInfoResponse_Version) GetMinor() int32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *GetApiInfoResponse_Version) GetPatch() int32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

var File_protos_fira_v1_api_proto protoreflect.FileDescriptor

var file_protos_fira_v1_api_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x69, 0x72, 0x61, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x66, 0x69, 0x72, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x69, 0x72, 0x61, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x70, 0x70, 0x2d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x69, 0x72, 0x61, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a,
	0x4b, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0b, 0x0a, 0x09,
	0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x96, 0x02, 0x0a, 0x0b, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x0c, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x62, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e,
	0x6b, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0xc0, 0x01,
	0x0a, 0x11, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x1f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4c, 0x49, 0x4e, 0x4b,
	0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x4c, 0x49, 0x4e,
	0x4b, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x20,
	0x0a, 0x1c, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03,
	0x12, 0x1e, 0x0a, 0x1a, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04,
	0x32, 0xe4, 0x0f, 0x0a, 0x0b, 0x46, 0x69, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x69, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x82, 0x01, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x80, 0x01, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x7c, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x9f, 0x01, 0x0a, 0x12, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x12, 0x69, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a,
	0x22, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x12, 0x63,
	0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x12, 0x66, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x12, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70,
	0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x8e, 0x01, 0x0a, 0x0e,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66,
	0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x9e, 0x01, 0x0a,
	0x12, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0xa9, 0x01,
	0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66,
	0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22,
	0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x79, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x62, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2f, 0x6d, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x62, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x8f, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66,
	0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x62, 0x0c, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x26, 0x62, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x2f, 0x7b, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0xca, 0x02, 0x92, 0x41, 0x8d, 0x02, 0x12, 0xc2,
	0x01, 0x0a, 0x08, 0x46, 0x69, 0x72, 0x61, 0x20, 0x41, 0x50, 0x49, 0x22, 0x4d, 0x0a, 0x0e, 0x4f,
	0x70, 0x65, 0x6e, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x61, 0x62, 0x73, 0x12, 0x24, 0x68,
	0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x66,
	0x69, 0x72, 0x61, 0x1a, 0x15, 0x70, 0x6e, 0x77, 0x78, 0x40, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f,
	0x72, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x2a, 0x60, 0x0a, 0x26, 0x47, 0x4e,
	0x55, 0x20, 0x41, 0x66, 0x66, 0x65, 0x72, 0x6f, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x20, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x20,
	0x76, 0x33, 0x2e, 0x30, 0x12, 0x36, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x66, 0x69, 0x72, 0x61, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x2f,
	0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x32, 0x05, 0x31, 0x2e,
	0x30, 0x2e, 0x30, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x1f, 0x0a, 0x1d, 0x0a, 0x0a,
	0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x0f, 0x08, 0x02, 0x1a, 0x09,
	0x58, 0x2d, 0x41, 0x50, 0x49, 0x2d, 0x4b, 0x65, 0x79, 0x20, 0x02, 0x5a, 0x37, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x6c, 0x61, 0x62, 0x73, 0x2f, 0x66, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_fira_v1_api_proto_rawDescOnce sync.Once
	file_protos_fira_v1_api_proto_rawDescData = file_protos_fira_v1_api_proto_rawDesc
)

func file_protos_fira_v1_api_proto_rawDescGZIP() []byte {
	file_protos_fira_v1_api_proto_rawDescOnce.Do(func() {
		file_protos_fira_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_fira_v1_api_proto_rawDescData)
	})
	return file_protos_fira_v1_api_proto_rawDescData
}

var file_protos_fira_v1_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_fira_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_protos_fira_v1_api_proto_goTypes = []interface{}{
	(LinkSessionStatus)(0),                // 0: protos.fira.v1.LinkSessionStatus
	(*GetApiInfoRequest)(nil),             // 1: protos.fira.v1.GetApiInfoRequest
	(*GetApiInfoResponse)(nil),            // 2: protos.fira.v1.GetApiInfoResponse
	(*LinkError)(nil),                     // 3: protos.fira.v1.LinkError
	(*LinkSession)(nil),                   // 4: protos.fira.v1.LinkSession
	(*Connection)(nil),                    // 5: protos.fira.v1.Connection
	(*CreateLinkSessionRequest)(nil),      // 6: protos.fira.v1.CreateLinkSessionRequest
	(*CreateLinkSessionResponse)(nil),     // 7: protos.fira.v1.CreateLinkSessionResponse
	(*GetLinkSessionRequest)(nil),         // 8: protos.fira.v1.GetLinkSessionRequest
	(*GetLinkSessionResponse)(nil),        // 9: protos.fira.v1.GetLinkSessionResponse
	(*GetApiInfoResponse_Version)(nil),    // 10: protos.fira.v1.GetApiInfoResponse.Version
	(*CreateAccountRequest)(nil),          // 11: protos.fira.v1.CreateAccountRequest
	(*VerifyAccountRequest)(nil),          // 12: protos.fira.v1.VerifyAccountRequest
	(*LoginAccountRequest)(nil),           // 13: protos.fira.v1.LoginAccountRequest
	(*BeginPasswordResetRequest)(nil),     // 14: protos.fira.v1.BeginPasswordResetRequest
	(*CreateAppRequest)(nil),              // 15: protos.fira.v1.CreateAppRequest
	(*ListAppsRequest)(nil),               // 16: protos.fira.v1.ListAppsRequest
	(*GetAppRequest)(nil),                 // 17: protos.fira.v1.GetAppRequest
	(*RotateAppTokenRequest)(nil),         // 18: protos.fira.v1.RotateAppTokenRequest
	(*InvalidateAppTokenRequest)(nil),     // 19: protos.fira.v1.InvalidateAppTokenRequest
	(*CompletePasswordResetRequest)(nil),  // 20: protos.fira.v1.CompletePasswordResetRequest
	(*GetAccountRequest)(nil),             // 21: protos.fira.v1.GetAccountRequest
	(*GetInstitutionsRequest)(nil),        // 22: protos.fira.v1.GetInstitutionsRequest
	(*CreateAccountResponse)(nil),         // 23: protos.fira.v1.CreateAccountResponse
	(*VerifyAccountResponse)(nil),         // 24: protos.fira.v1.VerifyAccountResponse
	(*LoginAccountResponse)(nil),          // 25: protos.fira.v1.LoginAccountResponse
	(*BeginPasswordResetResponse)(nil),    // 26: protos.fira.v1.BeginPasswordResetResponse
	(*CreateAppResponse)(nil),             // 27: protos.fira.v1.CreateAppResponse
	(*ListAppsResponse)(nil),              // 28: protos.fira.v1.ListAppsResponse
	(*GetAppResponse)(nil),                // 29: protos.fira.v1.GetAppResponse
	(*RotateAppTokenResponse)(nil),        // 30: protos.fira.v1.RotateAppTokenResponse
	(*InvalidateAppTokenResponse)(nil),    // 31: protos.fira.v1.InvalidateAppTokenResponse
	(*CompletePasswordResetResponse)(nil), // 32: protos.fira.v1.CompletePasswordResetResponse
	(*GetAccountResponse)(nil),            // 33: protos.fira.v1.GetAccountResponse
	(*GetInstitutionsResponse)(nil),       // 34: protos.fira.v1.GetInstitutionsResponse
}
var file_protos_fira_v1_api_proto_depIdxs = []int32{
	10, // 0: protos.fira.v1.GetApiInfoResponse.version:type_name -> protos.fira.v1.GetApiInfoResponse.Version
	0,  // 1: protos.fira.v1.LinkSession.status:type_name -> protos.fira.v1.LinkSessionStatus
	3,  // 2: protos.fira.v1.LinkSession.error:type_name -> protos.fira.v1.LinkError
	5,  // 3: protos.fira.v1.LinkSession.connection:type_name -> protos.fira.v1.Connection
	4,  // 4: protos.fira.v1.CreateLinkSessionResponse.link_session:type_name -> protos.fira.v1.LinkSession
	4,  // 5: protos.fira.v1.GetLinkSessionResponse.link_session:type_name -> protos.fira.v1.LinkSession
	1,  // 6: protos.fira.v1.FiraService.GetApiInfo:input_type -> protos.fira.v1.GetApiInfoRequest
	11, // 7: protos.fira.v1.FiraService.CreateAccount:input_type -> protos.fira.v1.CreateAccountRequest
	12, // 8: protos.fira.v1.FiraService.VerifyAccount:input_type -> protos.fira.v1.VerifyAccountRequest
	13, // 9: protos.fira.v1.FiraService.LoginAccount:input_type -> protos.fira.v1.LoginAccountRequest
	14, // 10: protos.fira.v1.FiraService.BeginPasswordReset:input_type -> protos.fira.v1.BeginPasswordResetRequest
	15, // 11: protos.fira.v1.FiraService.CreateApp:input_type -> protos.fira.v1.CreateAppRequest
	16, // 12: protos.fira.v1.FiraService.ListApps:input_type -> protos.fira.v1.ListAppsRequest
	17, // 13: protos.fira.v1.FiraService.GetApp:input_type -> protos.fira.v1.GetAppRequest
	18, // 14: protos.fira.v1.FiraService.RotateAppToken:input_type -> protos.fira.v1.RotateAppTokenRequest
	19, // 15: protos.fira.v1.FiraService.InvalidateAppToken:input_type -> protos.fira.v1.InvalidateAppTokenRequest
	20, // 16: protos.fira.v1.FiraService.CompletePasswordReset:input_type -> protos.fira.v1.CompletePasswordResetRequest
	21, // 17: protos.fira.v1.FiraService.GetAccount:input_type -> protos.fira.v1.GetAccountRequest
	22, // 18: protos.fira.v1.FiraService.GetInstitutions:input_type -> protos.fira.v1.GetInstitutionsRequest
	6,  // 19: protos.fira.v1.FiraService.CreateLinkSession:input_type -> protos.fira.v1.CreateLinkSessionRequest
	8,  // 20: protos.fira.v1.FiraService.GetLinkSession:input_type -> protos.fira.v1.GetLinkSessionRequest
	2,  // 21: protos.fira.v1.FiraService.GetApiInfo:output_type -> protos.fira.v1.GetApiInfoResponse
	23, // 22: protos.fira.v1.FiraService.CreateAccount:output_type -> protos.fira.v1.CreateAccountResponse
	24, // 23: protos.fira.v1.FiraService.VerifyAccount:output_type -> protos.fira.v1.VerifyAccountResponse
	25, // 24: protos.fira.v1.FiraService.LoginAccount:output_type -> protos.fira.v1.LoginAccountResponse
	26, // 25: protos.fira.v1.FiraService.BeginPasswordReset:output_type -> protos.fira.v1.BeginPasswordResetResponse
	27, // 26: protos.fira.v1.FiraService.CreateApp:output_type -> protos.fira.v1.CreateAppResponse
	28, // 27: protos.fira.v1.FiraService.ListApps:output_type -> protos.fira.v1.ListAppsResponse
	29, // 28: protos.fira.v1.FiraService.GetApp:output_type -> protos.fira.v1.GetAppResponse
	30, // 29: protos.fira.v1.FiraService.RotateAppToken:output_type -> protos.fira.v1.RotateAppTokenResponse
	31, // 30: protos.fira.v1.FiraService.InvalidateAppToken:output_type -> protos.fira.v1.InvalidateAppTokenResponse
	32, // 31: protos.fira.v1.FiraService.CompletePasswordReset:output_type -> protos.fira.v1.CompletePasswordResetResponse
	33, // 32: protos.fira.v1.FiraService.GetAccount:output_type -> protos.fira.v1.GetAccountResponse
	34, // 33: protos.fira.v1.FiraService.GetInstitutions:output_type -> protos.fira.v1.GetInstitutionsResponse
	7,  // 34: protos.fira.v1.FiraService.CreateLinkSession:output_type -> protos.fira.v1.CreateLinkSessionResponse
	9,  // 35: protos.fira.v1.FiraService.GetLinkSession:output_type -> protos.fira.v1.GetLinkSessionResponse
	21, // [21:36] is the sub-list for method output_type
	6,  // [6:21] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_protos_fira_v1_api_proto_init() }
func file_protos_fira_v1_api_proto_init() {
	if File_protos_fira_v1_api_proto != nil {
		return
	}
	file_protos_fira_v1_account_requests_proto_init()
	file_protos_fira_v1_app_requests_proto_init()
	file_protos_fira_v1_institution_requests_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_fira_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLinkSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLinkSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinkSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinkSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiInfoResponse_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_fira_v1_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_fira_v1_api_proto_goTypes,
		DependencyIndexes: file_protos_fira_v1_api_proto_depIdxs,
		EnumInfos:         file_protos_fira_v1_api_proto_enumTypes,
		MessageInfos:      file_protos_fira_v1_api_proto_msgTypes,
	}.Build()
	File_protos_fira_v1_api_proto = out.File
	file_protos_fira_v1_api_proto_rawDesc = nil
	file_protos_fira_v1_api_proto_goTypes = nil
	file_protos_fira_v1_api_proto_depIdxs = nil
}
