// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: protos/fira/v1/api.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LinkSessionStatus int32

const (
	LinkSessionStatus_LINK_SESSION_STATUS_UNSPECIFIED LinkSessionStatus = 0
	LinkSessionStatus_LINK_SESSION_STATUS_CREATED     LinkSessionStatus = 1
	LinkSessionStatus_LINK_SESSION_STATUS_IN_PROGRESS LinkSessionStatus = 2
	LinkSessionStatus_LINK_SESSION_STATUS_COMPLETE    LinkSessionStatus = 3
	LinkSessionStatus_LINK_SESSION_STATUS_FAILED      LinkSessionStatus = 4
)

// Enum value maps for LinkSessionStatus.
var (
	LinkSessionStatus_name = map[int32]string{
		0: "LINK_SESSION_STATUS_UNSPECIFIED",
		1: "LINK_SESSION_STATUS_CREATED",
		2: "LINK_SESSION_STATUS_IN_PROGRESS",
		3: "LINK_SESSION_STATUS_COMPLETE",
		4: "LINK_SESSION_STATUS_FAILED",
	}
	LinkSessionStatus_value = map[string]int32{
		"LINK_SESSION_STATUS_UNSPECIFIED": 0,
		"LINK_SESSION_STATUS_CREATED":     1,
		"LINK_SESSION_STATUS_IN_PROGRESS": 2,
		"LINK_SESSION_STATUS_COMPLETE":    3,
		"LINK_SESSION_STATUS_FAILED":      4,
	}
)

func (x LinkSessionStatus) Enum() *LinkSessionStatus {
	p := new(LinkSessionStatus)
	*p = x
	return p
}

func (x LinkSessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkSessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_fira_v1_api_proto_enumTypes[0].Descriptor()
}

func (LinkSessionStatus) Type() protoreflect.EnumType {
	return &file_protos_fira_v1_api_proto_enumTypes[0]
}

func (x LinkSessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkSessionStatus.Descriptor instead.
func (LinkSessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{0}
}

// Accounts can be created within one of these namespaces.
type AccountNamespace int32

const (
	AccountNamespace_ACCOUNT_NAMESPACE_UNSPECIFIED AccountNamespace = 0
	AccountNamespace_ACCOUNT_NAMESPACE_DEVELOPER   AccountNamespace = 1
	AccountNamespace_ACCOUNT_NAMESPACE_CONSUMER    AccountNamespace = 2
)

// Enum value maps for AccountNamespace.
var (
	AccountNamespace_name = map[int32]string{
		0: "ACCOUNT_NAMESPACE_UNSPECIFIED",
		1: "ACCOUNT_NAMESPACE_DEVELOPER",
		2: "ACCOUNT_NAMESPACE_CONSUMER",
	}
	AccountNamespace_value = map[string]int32{
		"ACCOUNT_NAMESPACE_UNSPECIFIED": 0,
		"ACCOUNT_NAMESPACE_DEVELOPER":   1,
		"ACCOUNT_NAMESPACE_CONSUMER":    2,
	}
)

func (x AccountNamespace) Enum() *AccountNamespace {
	p := new(AccountNamespace)
	*p = x
	return p
}

func (x AccountNamespace) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountNamespace) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_fira_v1_api_proto_enumTypes[1].Descriptor()
}

func (AccountNamespace) Type() protoreflect.EnumType {
	return &file_protos_fira_v1_api_proto_enumTypes[1]
}

func (x AccountNamespace) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountNamespace.Descriptor instead.
func (AccountNamespace) EnumDescriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{1}
}

type AccountCredentialType int32

const (
	AccountCredentialType_ACCOUNT_CREDENTIAL_TYPE_UNSPECIFIED  AccountCredentialType = 0
	AccountCredentialType_ACCOUNT_CREDENTIAL_TYPE_EMAIL        AccountCredentialType = 1
	AccountCredentialType_ACCOUNT_CREDENTIAL_TYPE_OAUTH_GITHUB AccountCredentialType = 2
)

// Enum value maps for AccountCredentialType.
var (
	AccountCredentialType_name = map[int32]string{
		0: "ACCOUNT_CREDENTIAL_TYPE_UNSPECIFIED",
		1: "ACCOUNT_CREDENTIAL_TYPE_EMAIL",
		2: "ACCOUNT_CREDENTIAL_TYPE_OAUTH_GITHUB",
	}
	AccountCredentialType_value = map[string]int32{
		"ACCOUNT_CREDENTIAL_TYPE_UNSPECIFIED":  0,
		"ACCOUNT_CREDENTIAL_TYPE_EMAIL":        1,
		"ACCOUNT_CREDENTIAL_TYPE_OAUTH_GITHUB": 2,
	}
)

func (x AccountCredentialType) Enum() *AccountCredentialType {
	p := new(AccountCredentialType)
	*p = x
	return p
}

func (x AccountCredentialType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountCredentialType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_fira_v1_api_proto_enumTypes[2].Descriptor()
}

func (AccountCredentialType) Type() protoreflect.EnumType {
	return &file_protos_fira_v1_api_proto_enumTypes[2]
}

func (x AccountCredentialType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountCredentialType.Descriptor instead.
func (AccountCredentialType) EnumDescriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{2}
}

type AccountRegistrationStatus int32

const (
	AccountRegistrationStatus_ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED  AccountRegistrationStatus = 0
	AccountRegistrationStatus_ACCOUNT_REGISTRATION_STATUS_VERIFY_EMAIL AccountRegistrationStatus = 1
	AccountRegistrationStatus_ACCOUNT_REGISTRATION_STATUS_OK           AccountRegistrationStatus = 2
	AccountRegistrationStatus_ACCOUNT_REGISTRATION_STATUS_ERROR        AccountRegistrationStatus = 99
)

// Enum value maps for AccountRegistrationStatus.
var (
	AccountRegistrationStatus_name = map[int32]string{
		0:  "ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED",
		1:  "ACCOUNT_REGISTRATION_STATUS_VERIFY_EMAIL",
		2:  "ACCOUNT_REGISTRATION_STATUS_OK",
		99: "ACCOUNT_REGISTRATION_STATUS_ERROR",
	}
	AccountRegistrationStatus_value = map[string]int32{
		"ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED":  0,
		"ACCOUNT_REGISTRATION_STATUS_VERIFY_EMAIL": 1,
		"ACCOUNT_REGISTRATION_STATUS_OK":           2,
		"ACCOUNT_REGISTRATION_STATUS_ERROR":        99,
	}
)

func (x AccountRegistrationStatus) Enum() *AccountRegistrationStatus {
	p := new(AccountRegistrationStatus)
	*p = x
	return p
}

func (x AccountRegistrationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountRegistrationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_fira_v1_api_proto_enumTypes[3].Descriptor()
}

func (AccountRegistrationStatus) Type() protoreflect.EnumType {
	return &file_protos_fira_v1_api_proto_enumTypes[3]
}

func (x AccountRegistrationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountRegistrationStatus.Descriptor instead.
func (AccountRegistrationStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{3}
}

type VerificationType int32

const (
	VerificationType_VERIFICATION_TYPE_UNSPECIFIED VerificationType = 0
	VerificationType_VERIFICATION_TYPE_EMAIL       VerificationType = 1
)

// Enum value maps for VerificationType.
var (
	VerificationType_name = map[int32]string{
		0: "VERIFICATION_TYPE_UNSPECIFIED",
		1: "VERIFICATION_TYPE_EMAIL",
	}
	VerificationType_value = map[string]int32{
		"VERIFICATION_TYPE_UNSPECIFIED": 0,
		"VERIFICATION_TYPE_EMAIL":       1,
	}
)

func (x VerificationType) Enum() *VerificationType {
	p := new(VerificationType)
	*p = x
	return p
}

func (x VerificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_fira_v1_api_proto_enumTypes[4].Descriptor()
}

func (VerificationType) Type() protoreflect.EnumType {
	return &file_protos_fira_v1_api_proto_enumTypes[4]
}

func (x VerificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerificationType.Descriptor instead.
func (VerificationType) EnumDescriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{4}
}

type GetApiInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetApiInfoRequest) Reset() {
	*x = GetApiInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiInfoRequest) ProtoMessage() {}

func (x *GetApiInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiInfoRequest.ProtoReflect.Descriptor instead.
func (*GetApiInfoRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{0}
}

type GetApiInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *GetApiInfoResponse_Version `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetApiInfoResponse) Reset() {
	*x = GetApiInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiInfoResponse) ProtoMessage() {}

func (x *GetApiInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiInfoResponse.ProtoReflect.Descriptor instead.
func (*GetApiInfoResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetApiInfoResponse) GetVersion() *GetApiInfoResponse_Version {
	if x != nil {
		return x.Version
	}
	return nil
}

type LinkError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LinkError) Reset() {
	*x = LinkError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkError) ProtoMessage() {}

func (x *LinkError) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkError.ProtoReflect.Descriptor instead.
func (*LinkError) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{2}
}

// A link session represents an attempt by a user to connect to their financial institution, select accounts,
// and provide consent to data sharing.
type LinkSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The link ID. Use in URL to fetch status.
	LinkId string `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	// The configured redirect URI
	RedirectUri string `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	// The configured connection to reconnect.
	ConnectionId string `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// Status of the current link. A timed out link will show up as failed.
	Status LinkSessionStatus `protobuf:"varint,4,opt,name=status,proto3,enum=protos.fira.v1.LinkSessionStatus" json:"status,omitempty"`
	// If the link failed, this will be the LinkError object
	Error *LinkError `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	// If the link was successful, this will be the resulting Connection object.
	Connection *Connection `protobuf:"bytes,6,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *LinkSession) Reset() {
	*x = LinkSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkSession) ProtoMessage() {}

func (x *LinkSession) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkSession.ProtoReflect.Descriptor instead.
func (*LinkSession) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *LinkSession) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

func (x *LinkSession) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *LinkSession) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *LinkSession) GetStatus() LinkSessionStatus {
	if x != nil {
		return x.Status
	}
	return LinkSessionStatus_LINK_SESSION_STATUS_UNSPECIFIED
}

func (x *LinkSession) GetError() *LinkError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *LinkSession) GetConnection() *Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{4}
}

type CreateLinkSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the URL that will be redirected to once the user session is comp
	RedirectUri string `protobuf:"bytes,1,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	// Use connection_id when reconnecting a lapsed connection.
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *CreateLinkSessionRequest) Reset() {
	*x = CreateLinkSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLinkSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLinkSessionRequest) ProtoMessage() {}

func (x *CreateLinkSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLinkSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateLinkSessionRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLinkSessionRequest) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *CreateLinkSessionRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type CreateLinkSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkSession *LinkSession `protobuf:"bytes,1,opt,name=link_session,json=linkSession,proto3" json:"link_session,omitempty"`
}

func (x *CreateLinkSessionResponse) Reset() {
	*x = CreateLinkSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLinkSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLinkSessionResponse) ProtoMessage() {}

func (x *CreateLinkSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLinkSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateLinkSessionResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{6}
}

func (x *CreateLinkSessionResponse) GetLinkSession() *LinkSession {
	if x != nil {
		return x.LinkSession
	}
	return nil
}

type GetLinkSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkId string `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
}

func (x *GetLinkSessionRequest) Reset() {
	*x = GetLinkSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinkSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkSessionRequest) ProtoMessage() {}

func (x *GetLinkSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkSessionRequest.ProtoReflect.Descriptor instead.
func (*GetLinkSessionRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetLinkSessionRequest) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

type GetLinkSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkSession *LinkSession `protobuf:"bytes,1,opt,name=link_session,json=linkSession,proto3" json:"link_session,omitempty"`
}

func (x *GetLinkSessionResponse) Reset() {
	*x = GetLinkSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinkSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkSessionResponse) ProtoMessage() {}

func (x *GetLinkSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkSessionResponse.ProtoReflect.Descriptor instead.
func (*GetLinkSessionResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetLinkSessionResponse) GetLinkSession() *LinkSession {
	if x != nil {
		return x.LinkSession
	}
	return nil
}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace      AccountNamespace          `protobuf:"varint,2,opt,name=namespace,proto3,enum=protos.fira.v1.AccountNamespace" json:"namespace,omitempty"`
	Status         AccountRegistrationStatus `protobuf:"varint,3,opt,name=status,proto3,enum=protos.fira.v1.AccountRegistrationStatus" json:"status,omitempty"`
	CredentialType AccountCredentialType     `protobuf:"varint,4,opt,name=credential_type,json=credentialType,proto3,enum=protos.fira.v1.AccountCredentialType" json:"credential_type,omitempty"`
	Id             string                    `protobuf:"bytes,20,opt,name=id,proto3" json:"id,omitempty"`
	// The account holder's name.
	Name string `protobuf:"bytes,22,opt,name=name,proto3" json:"name,omitempty"`
	// The account holder's email.
	Email string `protobuf:"bytes,23,opt,name=email,proto3" json:"email,omitempty"`
	// The account holder's avatar URL.
	AvatarUrl string `protobuf:"bytes,24,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// The account creation timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,50,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The account last updated timestamp.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,51,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{9}
}

func (x *Account) GetNamespace() AccountNamespace {
	if x != nil {
		return x.Namespace
	}
	return AccountNamespace_ACCOUNT_NAMESPACE_UNSPECIFIED
}

func (x *Account) GetStatus() AccountRegistrationStatus {
	if x != nil {
		return x.Status
	}
	return AccountRegistrationStatus_ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED
}

func (x *Account) GetCredentialType() AccountCredentialType {
	if x != nil {
		return x.CredentialType
	}
	return AccountCredentialType_ACCOUNT_CREDENTIAL_TYPE_UNSPECIFIED
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Account) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Account) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Account) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CredentialTypeEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email address to use for the account.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The password to use for the account.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// This will be used for building the URL in the verification email.
	// For example, with a base URL of "https://myapp.net" will the link in the verification email will a "verification_token"
	// URL argument appended to it: "http://myapp.net?verification_token=zxb38rjs9nh"
	// Use only for registration or re-verification
	VerificationBaseUrl string `protobuf:"bytes,3,opt,name=verification_base_url,json=verificationBaseUrl,proto3" json:"verification_base_url,omitempty"`
	// Common name for the new account i.e. "Jane Smith" - provide if the credential type is email.
	// Use only for registration.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// If true, re-send the email verification.
	Verify bool `protobuf:"varint,5,opt,name=verify,proto3" json:"verify,omitempty"`
}

func (x *CredentialTypeEmail) Reset() {
	*x = CredentialTypeEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialTypeEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialTypeEmail) ProtoMessage() {}

func (x *CredentialTypeEmail) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialTypeEmail.ProtoReflect.Descriptor instead.
func (*CredentialTypeEmail) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{10}
}

func (x *CredentialTypeEmail) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CredentialTypeEmail) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CredentialTypeEmail) GetVerificationBaseUrl() string {
	if x != nil {
		return x.VerificationBaseUrl
	}
	return ""
}

func (x *CredentialTypeEmail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CredentialTypeEmail) GetVerify() bool {
	if x != nil {
		return x.Verify
	}
	return false
}

type CredentialTypeGithub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public client ID for the GitHub OAuth app - must match the client secret stored on the server.
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// The redirect URI configured for the GitHub OAuth app.
	RedirectUri string `protobuf:"bytes,2,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	// The OAuth code returned by GitHub after the user has authorized the app.
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CredentialTypeGithub) Reset() {
	*x = CredentialTypeGithub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialTypeGithub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialTypeGithub) ProtoMessage() {}

func (x *CredentialTypeGithub) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialTypeGithub.ProtoReflect.Descriptor instead.
func (*CredentialTypeGithub) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{11}
}

func (x *CredentialTypeGithub) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CredentialTypeGithub) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *CredentialTypeGithub) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type LoginCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialType   AccountCredentialType `protobuf:"varint,1,opt,name=credential_type,json=credentialType,proto3,enum=protos.fira.v1.AccountCredentialType" json:"credential_type,omitempty"`
	EmailCredential  *CredentialTypeEmail  `protobuf:"bytes,2,opt,name=email_credential,json=emailCredential,proto3" json:"email_credential,omitempty"`
	GithubCredential *CredentialTypeGithub `protobuf:"bytes,3,opt,name=github_credential,json=githubCredential,proto3" json:"github_credential,omitempty"`
}

func (x *LoginCredential) Reset() {
	*x = LoginCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginCredential) ProtoMessage() {}

func (x *LoginCredential) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginCredential.ProtoReflect.Descriptor instead.
func (*LoginCredential) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{12}
}

func (x *LoginCredential) GetCredentialType() AccountCredentialType {
	if x != nil {
		return x.CredentialType
	}
	return AccountCredentialType_ACCOUNT_CREDENTIAL_TYPE_UNSPECIFIED
}

func (x *LoginCredential) GetEmailCredential() *CredentialTypeEmail {
	if x != nil {
		return x.EmailCredential
	}
	return nil
}

func (x *LoginCredential) GetGithubCredential() *CredentialTypeGithub {
	if x != nil {
		return x.GithubCredential
	}
	return nil
}

type CreateAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Which namespace to create the account in
	Namespace AccountNamespace `protobuf:"varint,1,opt,name=namespace,proto3,enum=protos.fira.v1.AccountNamespace" json:"namespace,omitempty"`
	// Login credentials for the new account
	Credential *LoginCredential `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
}

func (x *CreateAccountRequest) Reset() {
	*x = CreateAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRequest) ProtoMessage() {}

func (x *CreateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{13}
}

func (x *CreateAccountRequest) GetNamespace() AccountNamespace {
	if x != nil {
		return x.Namespace
	}
	return AccountNamespace_ACCOUNT_NAMESPACE_UNSPECIFIED
}

func (x *CreateAccountRequest) GetCredential() *LoginCredential {
	if x != nil {
		return x.Credential
	}
	return nil
}

type CreateAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the account registration. Most accounts will immediately go into the
	// ACCOUNT_REGISTRATION_STATUS_VERIFY_EMAIL status.
	Status AccountRegistrationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=protos.fira.v1.AccountRegistrationStatus" json:"status,omitempty"`
	// If the status was ACCOUNT_REGISTRATION_STATUS_ERROR, this will be the human-readable error message.
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// If the status is ACCOUNT_REGISTRATION_STATUS_OK, this will be the login JWT.
	Jwt string `protobuf:"bytes,3,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *CreateAccountResponse) Reset() {
	*x = CreateAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountResponse) ProtoMessage() {}

func (x *CreateAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountResponse.ProtoReflect.Descriptor instead.
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{14}
}

func (x *CreateAccountResponse) GetStatus() AccountRegistrationStatus {
	if x != nil {
		return x.Status
	}
	return AccountRegistrationStatus_ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED
}

func (x *CreateAccountResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateAccountResponse) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

type VerifyAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The verification_token provided in the URL.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// The namespace to verify the account in.
	Namespace AccountNamespace `protobuf:"varint,2,opt,name=namespace,proto3,enum=protos.fira.v1.AccountNamespace" json:"namespace,omitempty"`
	// The verification type, will also be provided in the URL.
	Type VerificationType `protobuf:"varint,3,opt,name=type,proto3,enum=protos.fira.v1.VerificationType" json:"type,omitempty"`
}

func (x *VerifyAccountRequest) Reset() {
	*x = VerifyAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyAccountRequest) ProtoMessage() {}

func (x *VerifyAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyAccountRequest.ProtoReflect.Descriptor instead.
func (*VerifyAccountRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{15}
}

func (x *VerifyAccountRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VerifyAccountRequest) GetNamespace() AccountNamespace {
	if x != nil {
		return x.Namespace
	}
	return AccountNamespace_ACCOUNT_NAMESPACE_UNSPECIFIED
}

func (x *VerifyAccountRequest) GetType() VerificationType {
	if x != nil {
		return x.Type
	}
	return VerificationType_VERIFICATION_TYPE_UNSPECIFIED
}

type VerifyAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the account registration. If the token was valid and not expired, this should be
	// ACCOUNT_REGISTRATION_STATUS_OK. Otherwise, the user may have to re-verify. To re-verify, use the log in endpoint
	// with email and password, setting the verify flag to true.
	Status AccountRegistrationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=protos.fira.v1.AccountRegistrationStatus" json:"status,omitempty"`
	// If the status is ACCOUNT_REGISTRATION_STATUS_ERROR this will be a human-readable message.
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// If the token was valid, this will be a new login JWT.
	Jwt string `protobuf:"bytes,3,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *VerifyAccountResponse) Reset() {
	*x = VerifyAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyAccountResponse) ProtoMessage() {}

func (x *VerifyAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyAccountResponse.ProtoReflect.Descriptor instead.
func (*VerifyAccountResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{16}
}

func (x *VerifyAccountResponse) GetStatus() AccountRegistrationStatus {
	if x != nil {
		return x.Status
	}
	return AccountRegistrationStatus_ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED
}

func (x *VerifyAccountResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *VerifyAccountResponse) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

type LoginAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace to log the user into - must match the original namespace used to create the account.
	Namespace AccountNamespace `protobuf:"varint,1,opt,name=namespace,proto3,enum=protos.fira.v1.AccountNamespace" json:"namespace,omitempty"`
	// Login credentials for the account
	Credential *LoginCredential `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
}

func (x *LoginAccountRequest) Reset() {
	*x = LoginAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAccountRequest) ProtoMessage() {}

func (x *LoginAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAccountRequest.ProtoReflect.Descriptor instead.
func (*LoginAccountRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{17}
}

func (x *LoginAccountRequest) GetNamespace() AccountNamespace {
	if x != nil {
		return x.Namespace
	}
	return AccountNamespace_ACCOUNT_NAMESPACE_UNSPECIFIED
}

func (x *LoginAccountRequest) GetCredential() *LoginCredential {
	if x != nil {
		return x.Credential
	}
	return nil
}

type LoginAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the account
	Status AccountRegistrationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=protos.fira.v1.AccountRegistrationStatus" json:"status,omitempty"`
	// If status is ACCOUNT_REGISTRATION_STATUS_ERROR this will be a human-readable message.
	AccountErrorMessage string `protobuf:"bytes,2,opt,name=account_error_message,json=accountErrorMessage,proto3" json:"account_error_message,omitempty"`
	// Whether the provided credentials were valid. If not, the JWT will not be provided.
	CredentialsValid bool `protobuf:"varint,3,opt,name=credentials_valid,json=credentialsValid,proto3" json:"credentials_valid,omitempty"`
	// If the credentials were valid, this will be a new login JWT.
	Jwt string `protobuf:"bytes,4,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *LoginAccountResponse) Reset() {
	*x = LoginAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAccountResponse) ProtoMessage() {}

func (x *LoginAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAccountResponse.ProtoReflect.Descriptor instead.
func (*LoginAccountResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{18}
}

func (x *LoginAccountResponse) GetStatus() AccountRegistrationStatus {
	if x != nil {
		return x.Status
	}
	return AccountRegistrationStatus_ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED
}

func (x *LoginAccountResponse) GetAccountErrorMessage() string {
	if x != nil {
		return x.AccountErrorMessage
	}
	return ""
}

func (x *LoginAccountResponse) GetCredentialsValid() bool {
	if x != nil {
		return x.CredentialsValid
	}
	return false
}

func (x *LoginAccountResponse) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

type BeginPasswordResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace to log the user into - must match the original namespace used to create the account.
	Namespace AccountNamespace `protobuf:"varint,1,opt,name=namespace,proto3,enum=protos.fira.v1.AccountNamespace" json:"namespace,omitempty"`
	// This will be used for building the URL in the password reset email.
	// For example, with a base URL of "https://myapp.net" will the link in the reset email will a "reset_token"
	// URL argument appended to it: "http://myapp.net?reset_token=zxb38rjs9nh"
	ResetBaseUrl string `protobuf:"bytes,2,opt,name=reset_base_url,json=resetBaseUrl,proto3" json:"reset_base_url,omitempty"`
	// Email address of the account to reset.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *BeginPasswordResetRequest) Reset() {
	*x = BeginPasswordResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginPasswordResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginPasswordResetRequest) ProtoMessage() {}

func (x *BeginPasswordResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginPasswordResetRequest.ProtoReflect.Descriptor instead.
func (*BeginPasswordResetRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{19}
}

func (x *BeginPasswordResetRequest) GetNamespace() AccountNamespace {
	if x != nil {
		return x.Namespace
	}
	return AccountNamespace_ACCOUNT_NAMESPACE_UNSPECIFIED
}

func (x *BeginPasswordResetRequest) GetResetBaseUrl() string {
	if x != nil {
		return x.ResetBaseUrl
	}
	return ""
}

func (x *BeginPasswordResetRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CompletePasswordResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The reset_token provided in the URL.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// New password for the account.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *CompletePasswordResetRequest) Reset() {
	*x = CompletePasswordResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletePasswordResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletePasswordResetRequest) ProtoMessage() {}

func (x *CompletePasswordResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletePasswordResetRequest.ProtoReflect.Descriptor instead.
func (*CompletePasswordResetRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{20}
}

func (x *CompletePasswordResetRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CompletePasswordResetRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CompletePasswordResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of the password reset.
	Status AccountRegistrationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=protos.fira.v1.AccountRegistrationStatus" json:"status,omitempty"`
	// If status is ACCOUNT_REGISTRATION_STATUS_ERROR this will be a human-readable message.
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// If the status is ACCOUNT_REGISTRATION_STATUS_OK, this will be a new login JWT.
	Jwt string `protobuf:"bytes,3,opt,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *CompletePasswordResetResponse) Reset() {
	*x = CompletePasswordResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletePasswordResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletePasswordResetResponse) ProtoMessage() {}

func (x *CompletePasswordResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletePasswordResetResponse.ProtoReflect.Descriptor instead.
func (*CompletePasswordResetResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{21}
}

func (x *CompletePasswordResetResponse) GetStatus() AccountRegistrationStatus {
	if x != nil {
		return x.Status
	}
	return AccountRegistrationStatus_ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED
}

func (x *CompletePasswordResetResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CompletePasswordResetResponse) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

// Placeholder - there is no information to return right now. If the email exists, a reset email will be sent.
type BeginPasswordResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BeginPasswordResetResponse) Reset() {
	*x = BeginPasswordResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginPasswordResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginPasswordResetResponse) ProtoMessage() {}

func (x *BeginPasswordResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginPasswordResetResponse.ProtoReflect.Descriptor instead.
func (*BeginPasswordResetResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{22}
}

type GetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{23}
}

type GetAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetAccountResponse) Reset() {
	*x = GetAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountResponse) ProtoMessage() {}

func (x *GetAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountResponse.ProtoReflect.Descriptor instead.
func (*GetAccountResponse) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{24}
}

func (x *GetAccountResponse) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type GetApiInfoResponse_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major int32 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor int32 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch int32 `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
}

func (x *GetApiInfoResponse_Version) Reset() {
	*x = GetApiInfoResponse_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_fira_v1_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiInfoResponse_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiInfoResponse_Version) ProtoMessage() {}

func (x *GetApiInfoResponse_Version) ProtoReflect() protoreflect.Message {
	mi := &file_protos_fira_v1_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiInfoResponse_Version.ProtoReflect.Descriptor instead.
func (*GetApiInfoResponse_Version) Descriptor() ([]byte, []int) {
	return file_protos_fira_v1_api_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetApiInfoResponse_Version) GetMajor() int32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *GetApiInfoResponse_Version) GetMinor() int32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *GetApiInfoResponse_Version) GetPatch() int32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

var File_protos_fira_v1_api_proto protoreflect.FileDescriptor

var file_protos_fira_v1_api_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x66, 0x69, 0x72, 0x61, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa7,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x4b, 0x0a, 0x07, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x69, 0x6e,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x22, 0x0b, 0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x6b,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x96, 0x02, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72,
	0x69, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0c,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x5b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x22,
	0x58, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6c, 0x69,
	0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x03, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66,
	0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x32, 0x0a, 0x15, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61,
	0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x22, 0x6a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x84, 0x02,
	0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x12, 0x4e, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4e, 0x0a, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x12, 0x51, 0x0a, 0x11, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x47, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x52, 0x10, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x22, 0x97, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3f, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x91,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a,
	0x77, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x14, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x3e, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x13,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x22, 0xcc, 0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x77, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x19, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3e, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x42, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x50, 0x0a,
	0x1c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x99, 0x01, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66,
	0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0xc0, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x6e, 0x6b,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a,
	0x1f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x45, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4c, 0x49, 0x4e, 0x4b,
	0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x4c, 0x49,
	0x4e, 0x4b, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x76, 0x0a, 0x10, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x1d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x53, 0x50,
	0x41, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x44, 0x45, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x45, 0x52,
	0x10, 0x02, 0x2a, 0x8d, 0x01, 0x0a, 0x15, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x23,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49,
	0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42,
	0x10, 0x02, 0x2a, 0xc1, 0x01, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2b, 0x0a, 0x27, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2c, 0x0a,
	0x28, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x56, 0x45, 0x52,
	0x49, 0x46, 0x59, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x02, 0x12,
	0x25, 0x0a, 0x21, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x63, 0x2a, 0x52, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a,
	0x17, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x32, 0xe9, 0x09, 0x0a, 0x0b, 0x46,
	0x69, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22,
	0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x80, 0x01, 0x0a, 0x0d, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x7c, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x9f, 0x01, 0x0a, 0x12,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0xa9, 0x01,
	0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66,
	0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22,
	0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x79, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x62, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2f, 0x6d, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69,
	0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x62, 0x0c, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x8d, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x66, 0x69, 0x72, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26,
	0x62, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x2f, 0x7b, 0x6c, 0x69,
	0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0xca, 0x02, 0x92, 0x41, 0x8d, 0x02, 0x12, 0xc2, 0x01,
	0x0a, 0x08, 0x46, 0x69, 0x72, 0x61, 0x20, 0x41, 0x50, 0x49, 0x22, 0x4d, 0x0a, 0x0e, 0x4f, 0x70,
	0x65, 0x6e, 0x20, 0x43, 0x6f, 0x72, 0x65, 0x20, 0x4c, 0x61, 0x62, 0x73, 0x12, 0x24, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x66, 0x69,
	0x72, 0x61, 0x1a, 0x15, 0x70, 0x6e, 0x77, 0x78, 0x40, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x2a, 0x60, 0x0a, 0x26, 0x47, 0x4e, 0x55,
	0x20, 0x41, 0x66, 0x66, 0x65, 0x72, 0x6f, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x76,
	0x33, 0x2e, 0x30, 0x12, 0x36, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x72, 0x65,
	0x6c, 0x61, 0x62, 0x73, 0x2f, 0x66, 0x69, 0x72, 0x61, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x2f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x32, 0x05, 0x31, 0x2e, 0x30,
	0x2e, 0x30, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x1f, 0x0a, 0x1d, 0x0a, 0x0a, 0x41,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x12, 0x0f, 0x08, 0x02, 0x1a, 0x09, 0x58,
	0x2d, 0x41, 0x50, 0x49, 0x2d, 0x4b, 0x65, 0x79, 0x20, 0x02, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x72, 0x65, 0x6c,
	0x61, 0x62, 0x73, 0x2f, 0x66, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_fira_v1_api_proto_rawDescOnce sync.Once
	file_protos_fira_v1_api_proto_rawDescData = file_protos_fira_v1_api_proto_rawDesc
)

func file_protos_fira_v1_api_proto_rawDescGZIP() []byte {
	file_protos_fira_v1_api_proto_rawDescOnce.Do(func() {
		file_protos_fira_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_fira_v1_api_proto_rawDescData)
	})
	return file_protos_fira_v1_api_proto_rawDescData
}

var file_protos_fira_v1_api_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_protos_fira_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_protos_fira_v1_api_proto_goTypes = []interface{}{
	(LinkSessionStatus)(0),                // 0: protos.fira.v1.LinkSessionStatus
	(AccountNamespace)(0),                 // 1: protos.fira.v1.AccountNamespace
	(AccountCredentialType)(0),            // 2: protos.fira.v1.AccountCredentialType
	(AccountRegistrationStatus)(0),        // 3: protos.fira.v1.AccountRegistrationStatus
	(VerificationType)(0),                 // 4: protos.fira.v1.VerificationType
	(*GetApiInfoRequest)(nil),             // 5: protos.fira.v1.GetApiInfoRequest
	(*GetApiInfoResponse)(nil),            // 6: protos.fira.v1.GetApiInfoResponse
	(*LinkError)(nil),                     // 7: protos.fira.v1.LinkError
	(*LinkSession)(nil),                   // 8: protos.fira.v1.LinkSession
	(*Connection)(nil),                    // 9: protos.fira.v1.Connection
	(*CreateLinkSessionRequest)(nil),      // 10: protos.fira.v1.CreateLinkSessionRequest
	(*CreateLinkSessionResponse)(nil),     // 11: protos.fira.v1.CreateLinkSessionResponse
	(*GetLinkSessionRequest)(nil),         // 12: protos.fira.v1.GetLinkSessionRequest
	(*GetLinkSessionResponse)(nil),        // 13: protos.fira.v1.GetLinkSessionResponse
	(*Account)(nil),                       // 14: protos.fira.v1.Account
	(*CredentialTypeEmail)(nil),           // 15: protos.fira.v1.CredentialTypeEmail
	(*CredentialTypeGithub)(nil),          // 16: protos.fira.v1.CredentialTypeGithub
	(*LoginCredential)(nil),               // 17: protos.fira.v1.LoginCredential
	(*CreateAccountRequest)(nil),          // 18: protos.fira.v1.CreateAccountRequest
	(*CreateAccountResponse)(nil),         // 19: protos.fira.v1.CreateAccountResponse
	(*VerifyAccountRequest)(nil),          // 20: protos.fira.v1.VerifyAccountRequest
	(*VerifyAccountResponse)(nil),         // 21: protos.fira.v1.VerifyAccountResponse
	(*LoginAccountRequest)(nil),           // 22: protos.fira.v1.LoginAccountRequest
	(*LoginAccountResponse)(nil),          // 23: protos.fira.v1.LoginAccountResponse
	(*BeginPasswordResetRequest)(nil),     // 24: protos.fira.v1.BeginPasswordResetRequest
	(*CompletePasswordResetRequest)(nil),  // 25: protos.fira.v1.CompletePasswordResetRequest
	(*CompletePasswordResetResponse)(nil), // 26: protos.fira.v1.CompletePasswordResetResponse
	(*BeginPasswordResetResponse)(nil),    // 27: protos.fira.v1.BeginPasswordResetResponse
	(*GetAccountRequest)(nil),             // 28: protos.fira.v1.GetAccountRequest
	(*GetAccountResponse)(nil),            // 29: protos.fira.v1.GetAccountResponse
	(*GetApiInfoResponse_Version)(nil),    // 30: protos.fira.v1.GetApiInfoResponse.Version
	(*timestamppb.Timestamp)(nil),         // 31: google.protobuf.Timestamp
}
var file_protos_fira_v1_api_proto_depIdxs = []int32{
	30, // 0: protos.fira.v1.GetApiInfoResponse.version:type_name -> protos.fira.v1.GetApiInfoResponse.Version
	0,  // 1: protos.fira.v1.LinkSession.status:type_name -> protos.fira.v1.LinkSessionStatus
	7,  // 2: protos.fira.v1.LinkSession.error:type_name -> protos.fira.v1.LinkError
	9,  // 3: protos.fira.v1.LinkSession.connection:type_name -> protos.fira.v1.Connection
	8,  // 4: protos.fira.v1.CreateLinkSessionResponse.link_session:type_name -> protos.fira.v1.LinkSession
	8,  // 5: protos.fira.v1.GetLinkSessionResponse.link_session:type_name -> protos.fira.v1.LinkSession
	1,  // 6: protos.fira.v1.Account.namespace:type_name -> protos.fira.v1.AccountNamespace
	3,  // 7: protos.fira.v1.Account.status:type_name -> protos.fira.v1.AccountRegistrationStatus
	2,  // 8: protos.fira.v1.Account.credential_type:type_name -> protos.fira.v1.AccountCredentialType
	31, // 9: protos.fira.v1.Account.created_at:type_name -> google.protobuf.Timestamp
	31, // 10: protos.fira.v1.Account.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 11: protos.fira.v1.LoginCredential.credential_type:type_name -> protos.fira.v1.AccountCredentialType
	15, // 12: protos.fira.v1.LoginCredential.email_credential:type_name -> protos.fira.v1.CredentialTypeEmail
	16, // 13: protos.fira.v1.LoginCredential.github_credential:type_name -> protos.fira.v1.CredentialTypeGithub
	1,  // 14: protos.fira.v1.CreateAccountRequest.namespace:type_name -> protos.fira.v1.AccountNamespace
	17, // 15: protos.fira.v1.CreateAccountRequest.credential:type_name -> protos.fira.v1.LoginCredential
	3,  // 16: protos.fira.v1.CreateAccountResponse.status:type_name -> protos.fira.v1.AccountRegistrationStatus
	1,  // 17: protos.fira.v1.VerifyAccountRequest.namespace:type_name -> protos.fira.v1.AccountNamespace
	4,  // 18: protos.fira.v1.VerifyAccountRequest.type:type_name -> protos.fira.v1.VerificationType
	3,  // 19: protos.fira.v1.VerifyAccountResponse.status:type_name -> protos.fira.v1.AccountRegistrationStatus
	1,  // 20: protos.fira.v1.LoginAccountRequest.namespace:type_name -> protos.fira.v1.AccountNamespace
	17, // 21: protos.fira.v1.LoginAccountRequest.credential:type_name -> protos.fira.v1.LoginCredential
	3,  // 22: protos.fira.v1.LoginAccountResponse.status:type_name -> protos.fira.v1.AccountRegistrationStatus
	1,  // 23: protos.fira.v1.BeginPasswordResetRequest.namespace:type_name -> protos.fira.v1.AccountNamespace
	3,  // 24: protos.fira.v1.CompletePasswordResetResponse.status:type_name -> protos.fira.v1.AccountRegistrationStatus
	14, // 25: protos.fira.v1.GetAccountResponse.account:type_name -> protos.fira.v1.Account
	5,  // 26: protos.fira.v1.FiraService.GetApiInfo:input_type -> protos.fira.v1.GetApiInfoRequest
	18, // 27: protos.fira.v1.FiraService.CreateAccount:input_type -> protos.fira.v1.CreateAccountRequest
	20, // 28: protos.fira.v1.FiraService.VerifyAccount:input_type -> protos.fira.v1.VerifyAccountRequest
	22, // 29: protos.fira.v1.FiraService.LoginAccount:input_type -> protos.fira.v1.LoginAccountRequest
	24, // 30: protos.fira.v1.FiraService.BeginPasswordReset:input_type -> protos.fira.v1.BeginPasswordResetRequest
	25, // 31: protos.fira.v1.FiraService.CompletePasswordReset:input_type -> protos.fira.v1.CompletePasswordResetRequest
	28, // 32: protos.fira.v1.FiraService.GetAccount:input_type -> protos.fira.v1.GetAccountRequest
	10, // 33: protos.fira.v1.FiraService.CreateLinkSession:input_type -> protos.fira.v1.CreateLinkSessionRequest
	12, // 34: protos.fira.v1.FiraService.GetLinkSession:input_type -> protos.fira.v1.GetLinkSessionRequest
	6,  // 35: protos.fira.v1.FiraService.GetApiInfo:output_type -> protos.fira.v1.GetApiInfoResponse
	19, // 36: protos.fira.v1.FiraService.CreateAccount:output_type -> protos.fira.v1.CreateAccountResponse
	21, // 37: protos.fira.v1.FiraService.VerifyAccount:output_type -> protos.fira.v1.VerifyAccountResponse
	23, // 38: protos.fira.v1.FiraService.LoginAccount:output_type -> protos.fira.v1.LoginAccountResponse
	27, // 39: protos.fira.v1.FiraService.BeginPasswordReset:output_type -> protos.fira.v1.BeginPasswordResetResponse
	26, // 40: protos.fira.v1.FiraService.CompletePasswordReset:output_type -> protos.fira.v1.CompletePasswordResetResponse
	29, // 41: protos.fira.v1.FiraService.GetAccount:output_type -> protos.fira.v1.GetAccountResponse
	11, // 42: protos.fira.v1.FiraService.CreateLinkSession:output_type -> protos.fira.v1.CreateLinkSessionResponse
	13, // 43: protos.fira.v1.FiraService.GetLinkSession:output_type -> protos.fira.v1.GetLinkSessionResponse
	35, // [35:44] is the sub-list for method output_type
	26, // [26:35] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_protos_fira_v1_api_proto_init() }
func file_protos_fira_v1_api_proto_init() {
	if File_protos_fira_v1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_fira_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLinkSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLinkSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinkSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinkSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialTypeEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialTypeGithub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginPasswordResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletePasswordResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletePasswordResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginPasswordResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_fira_v1_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiInfoResponse_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_fira_v1_api_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_fira_v1_api_proto_goTypes,
		DependencyIndexes: file_protos_fira_v1_api_proto_depIdxs,
		EnumInfos:         file_protos_fira_v1_api_proto_enumTypes,
		MessageInfos:      file_protos_fira_v1_api_proto_msgTypes,
	}.Build()
	File_protos_fira_v1_api_proto = out.File
	file_protos_fira_v1_api_proto_rawDesc = nil
	file_protos_fira_v1_api_proto_goTypes = nil
	file_protos_fira_v1_api_proto_depIdxs = nil
}
