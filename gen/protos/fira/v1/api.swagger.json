{
  "swagger": "2.0",
  "info": {
    "title": "Fira API",
    "version": "1.0.0",
    "contact": {
      "name": "Open Core Labs",
      "url": "https://github.com/opencorelabs/fira",
      "email": "pnwx@opencorelabs.org"
    },
    "license": {
      "name": "GNU Affero General Public License v3.0",
      "url": "https://github.com/opencorelabs/fira/blob/main/LICENSE"
    }
  },
  "tags": [
    {
      "name": "FiraService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/accounts/complete_password_reset": {
      "post": {
        "summary": "Complete the password reset process. Provide the token from the password reset email and a new password.",
        "operationId": "FiraService_CompletePasswordReset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CompletePasswordResetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CompletePasswordResetRequest"
            }
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/accounts/login": {
      "post": {
        "summary": "Exchange email/password credentials for a session JWT",
        "operationId": "FiraService_LoginAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginAccountRequest"
            }
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/accounts/me": {
      "get": {
        "summary": "Retrieve the account information for the currently logged in account holder.",
        "operationId": "FiraService_GetAccount",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/accounts/register": {
      "post": {
        "summary": "Register a new account with the server. This will trigger an out-of-band verification for the user. As of now,\nthis will take the form of email verification.",
        "operationId": "FiraService_CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccountRequest"
            }
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/accounts/request_password_reset": {
      "post": {
        "summary": "Start the password reset process. If the email is found, a password reset email will be sent to the account holder.",
        "operationId": "FiraService_BeginPasswordReset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BeginPasswordResetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1BeginPasswordResetRequest"
            }
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/accounts/verify": {
      "post": {
        "summary": "Verify an unverified account using a token exchanged out-of-band with the account owner.",
        "operationId": "FiraService_VerifyAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VerifyAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1VerifyAccountRequest"
            }
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/apps": {
      "get": {
        "summary": "Returns a list of all apps for the logged in user.",
        "operationId": "FiraService_ListApps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAppsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FiraService"
        ]
      },
      "post": {
        "summary": "Create an \"App\" - app are used to access the Fira data API.",
        "operationId": "FiraService_CreateApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAppResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAppRequest"
            }
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/apps/{appId}": {
      "get": {
        "summary": "Returns a single app for the logged in user.",
        "operationId": "FiraService_GetApp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAppResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/apps/{appId}/invalidate_token": {
      "post": {
        "summary": "Invalidate an app token. This will immediately invalidate the token.",
        "operationId": "FiraService_InvalidateAppToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InvalidateAppTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "jwt": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/apps/{appId}/rotate_token": {
      "post": {
        "summary": "Rotate the JWT for an app. The old token will still be valid until the expiration time.",
        "operationId": "FiraService_RotateAppToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RotateAppTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "environment": {
                  "$ref": "#/definitions/v1Environment"
                }
              }
            }
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/info": {
      "get": {
        "operationId": "FiraService_GetApiInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetApiInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/institutions": {
      "get": {
        "operationId": "FiraService_GetInstitutions",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/v1Institution"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCodes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/link": {
      "post": {
        "summary": "Create a new link session. This will return a URL to redirect the user to where they will be able to select a\nfinancial institution to connect to and log in.",
        "operationId": "FiraService_CreateLinkSession",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1LinkSession"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateLinkSessionRequest"
            }
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    },
    "/api/v1/link/{linkId}": {
      "get": {
        "summary": "Retrieve the status of a link session.",
        "operationId": "FiraService_GetLinkSession",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1LinkSession"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "linkId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "FiraService"
        ]
      }
    }
  },
  "definitions": {
    "GetApiInfoResponseVersion": {
      "type": "object",
      "properties": {
        "major": {
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "type": "integer",
          "format": "int32"
        },
        "patch": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Account": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1AccountNamespace"
        },
        "status": {
          "$ref": "#/definitions/v1AccountRegistrationStatus"
        },
        "credentialType": {
          "$ref": "#/definitions/v1AccountCredentialType"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The account holder's name."
        },
        "email": {
          "type": "string",
          "description": "The account holder's email."
        },
        "avatarUrl": {
          "type": "string",
          "description": "The account holder's avatar URL."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The account creation timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The account last updated timestamp."
        }
      }
    },
    "v1AccountCredentialType": {
      "type": "string",
      "enum": [
        "ACCOUNT_CREDENTIAL_TYPE_UNSPECIFIED",
        "ACCOUNT_CREDENTIAL_TYPE_EMAIL",
        "ACCOUNT_CREDENTIAL_TYPE_OAUTH_GITHUB"
      ],
      "default": "ACCOUNT_CREDENTIAL_TYPE_UNSPECIFIED"
    },
    "v1AccountNamespace": {
      "type": "string",
      "enum": [
        "ACCOUNT_NAMESPACE_UNSPECIFIED",
        "ACCOUNT_NAMESPACE_DEVELOPER",
        "ACCOUNT_NAMESPACE_CONSUMER"
      ],
      "default": "ACCOUNT_NAMESPACE_UNSPECIFIED",
      "description": "Accounts can be created within one of these namespaces."
    },
    "v1AccountRegistrationStatus": {
      "type": "string",
      "enum": [
        "ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED",
        "ACCOUNT_REGISTRATION_STATUS_VERIFY_EMAIL",
        "ACCOUNT_REGISTRATION_STATUS_OK",
        "ACCOUNT_REGISTRATION_STATUS_ERROR"
      ],
      "default": "ACCOUNT_REGISTRATION_STATUS_UNSPECIFIED"
    },
    "v1App": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/v1Account"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AppToken"
          }
        }
      }
    },
    "v1AppToken": {
      "type": "object",
      "properties": {
        "environment": {
          "$ref": "#/definitions/v1Environment"
        },
        "jwt": {
          "type": "string"
        },
        "validUtil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1BeginPasswordResetRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1AccountNamespace",
          "description": "Namespace to log the user into - must match the original namespace used to create the account."
        },
        "resetBaseUrl": {
          "type": "string",
          "title": "This will be used for building the URL in the password reset email.\nFor example, with a base URL of \"https://myapp.net\" will the link in the reset email will a \"reset_token\"\nURL argument appended to it: \"http://myapp.net?reset_token=zxb38rjs9nh\""
        },
        "email": {
          "type": "string",
          "description": "Email address of the account to reset."
        }
      }
    },
    "v1BeginPasswordResetResponse": {
      "type": "object",
      "description": "Placeholder - there is no information to return right now\nIf the email exists, a reset email will be sent."
    },
    "v1CompletePasswordResetRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "The reset_token provided in the URL."
        },
        "password": {
          "type": "string",
          "description": "New password for the account."
        }
      }
    },
    "v1CompletePasswordResetResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1AccountRegistrationStatus",
          "description": "Status of the password reset."
        },
        "errorMessage": {
          "type": "string",
          "description": "If status is ACCOUNT_REGISTRATION_STATUS_ERROR this will be a human-readable message."
        },
        "jwt": {
          "type": "string",
          "description": "If the status is ACCOUNT_REGISTRATION_STATUS_OK, this will be a new login JWT."
        }
      }
    },
    "v1Connection": {
      "type": "object"
    },
    "v1CreateAccountRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1AccountNamespace",
          "title": "Which namespace to create the account in"
        },
        "credential": {
          "$ref": "#/definitions/v1LoginCredential",
          "title": "Login credentials for the new account"
        }
      }
    },
    "v1CreateAccountResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1AccountRegistrationStatus",
          "description": "Status of the account registration. Most accounts will immediately go into the\nACCOUNT_REGISTRATION_STATUS_VERIFY_EMAIL status."
        },
        "errorMessage": {
          "type": "string",
          "description": "If the status was ACCOUNT_REGISTRATION_STATUS_ERROR, this will be the human-readable error message."
        },
        "jwt": {
          "type": "string",
          "description": "If the status is ACCOUNT_REGISTRATION_STATUS_OK, this will be the login JWT."
        }
      }
    },
    "v1CreateAppRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1CreateAppResponse": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/v1App"
        }
      }
    },
    "v1CreateLinkSessionRequest": {
      "type": "object",
      "properties": {
        "redirectUri": {
          "type": "string",
          "title": "This is the URL that will be redirected to once the user session is comp"
        },
        "connectionId": {
          "type": "string",
          "description": "Use connection_id when reconnecting a lapsed connection."
        }
      }
    },
    "v1CreateLinkSessionResponse": {
      "type": "object",
      "properties": {
        "linkSession": {
          "$ref": "#/definitions/v1LinkSession"
        }
      }
    },
    "v1CredentialTypeEmail": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address to use for the account."
        },
        "password": {
          "type": "string",
          "description": "The password to use for the account."
        },
        "verificationBaseUrl": {
          "type": "string",
          "title": "This will be used for building the URL in the verification email.\nFor example, with a base URL of \"https://myapp.net\" will the link in the verification email will a \"verification_token\"\nURL argument appended to it: \"http://myapp.net?verification_token=zxb38rjs9nh\"\nUse only for registration or re-verification"
        },
        "name": {
          "type": "string",
          "description": "Common name for the new account i.e. \"Jane Smith\" - provide if the credential type is email.\nUse only for registration."
        },
        "verify": {
          "type": "boolean",
          "description": "If true, re-send the email verification."
        }
      }
    },
    "v1CredentialTypeGithub": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Public client ID for the GitHub OAuth app - must match the client secret stored on the server."
        },
        "redirectUri": {
          "type": "string",
          "description": "The redirect URI configured for the GitHub OAuth app."
        },
        "code": {
          "type": "string",
          "description": "The OAuth code returned by GitHub after the user has authorized the app."
        }
      }
    },
    "v1Environment": {
      "type": "string",
      "enum": [
        "ENVIRONMENT_UNSPECIFIED",
        "ENVIRONMENT_SANDBOX",
        "ENVIRONMENT_DEVELOPER",
        "ENVIRONMENT_PRODUCTION"
      ],
      "default": "ENVIRONMENT_UNSPECIFIED"
    },
    "v1GetAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/v1Account"
        }
      }
    },
    "v1GetApiInfoResponse": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/GetApiInfoResponseVersion"
        }
      }
    },
    "v1GetAppResponse": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/v1App"
        }
      }
    },
    "v1GetInstitutionsResponse": {
      "type": "object",
      "properties": {
        "institutions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Institution"
          }
        }
      }
    },
    "v1GetLinkSessionResponse": {
      "type": "object",
      "properties": {
        "linkSession": {
          "$ref": "#/definitions/v1LinkSession"
        }
      }
    },
    "v1Institution": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "primaryColor": {
          "type": "string"
        },
        "oauth": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "simpleStatus": {
          "$ref": "#/definitions/v1InstitutionSimpleStatus"
        },
        "notice": {
          "type": "string"
        }
      }
    },
    "v1InstitutionSimpleStatus": {
      "type": "string",
      "enum": [
        "INSTITUTION_SIMPLE_STATUS_UNSPECIFIED",
        "INSTITUTION_SIMPLE_STATUS_GREEN",
        "INSTITUTION_SIMPLE_STATUS_YELLOW",
        "INSTITUTION_SIMPLE_STATUS_RED"
      ],
      "default": "INSTITUTION_SIMPLE_STATUS_UNSPECIFIED"
    },
    "v1InvalidateAppTokenResponse": {
      "type": "object"
    },
    "v1LinkError": {
      "type": "object"
    },
    "v1LinkSession": {
      "type": "object",
      "properties": {
        "linkId": {
          "type": "string",
          "description": "The link ID. Use in URL to fetch status."
        },
        "redirectUri": {
          "type": "string",
          "title": "The configured redirect URI"
        },
        "connectionId": {
          "type": "string",
          "description": "The configured connection to reconnect."
        },
        "status": {
          "$ref": "#/definitions/v1LinkSessionStatus",
          "description": "Status of the current link. A timed out link will show up as failed."
        },
        "error": {
          "$ref": "#/definitions/v1LinkError",
          "title": "If the link failed, this will be the LinkError object"
        },
        "connection": {
          "$ref": "#/definitions/v1Connection",
          "description": "If the link was successful, this will be the resulting Connection object."
        }
      },
      "description": "A link session represents an attempt by a user to connect to their financial institution, select accounts,\nand provide consent to data sharing."
    },
    "v1LinkSessionStatus": {
      "type": "string",
      "enum": [
        "LINK_SESSION_STATUS_UNSPECIFIED",
        "LINK_SESSION_STATUS_CREATED",
        "LINK_SESSION_STATUS_IN_PROGRESS",
        "LINK_SESSION_STATUS_COMPLETE",
        "LINK_SESSION_STATUS_FAILED"
      ],
      "default": "LINK_SESSION_STATUS_UNSPECIFIED"
    },
    "v1ListAppsResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1App"
          }
        }
      }
    },
    "v1LoginAccountRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1AccountNamespace",
          "description": "Namespace to log the user into - must match the original namespace used to create the account."
        },
        "credential": {
          "$ref": "#/definitions/v1LoginCredential",
          "title": "Login credentials for the account"
        }
      }
    },
    "v1LoginAccountResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1AccountRegistrationStatus",
          "title": "Status of the account"
        },
        "accountErrorMessage": {
          "type": "string",
          "description": "If status is ACCOUNT_REGISTRATION_STATUS_ERROR this will be a human-readable message."
        },
        "credentialsValid": {
          "type": "boolean",
          "description": "Whether the provided credentials were valid. If not, the JWT will not be provided."
        },
        "jwt": {
          "type": "string",
          "description": "If the credentials were valid, this will be a new login JWT."
        }
      }
    },
    "v1LoginCredential": {
      "type": "object",
      "properties": {
        "credentialType": {
          "$ref": "#/definitions/v1AccountCredentialType"
        },
        "emailCredential": {
          "$ref": "#/definitions/v1CredentialTypeEmail"
        },
        "githubCredential": {
          "$ref": "#/definitions/v1CredentialTypeGithub"
        }
      }
    },
    "v1RotateAppTokenResponse": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#/definitions/v1App"
        }
      }
    },
    "v1VerificationType": {
      "type": "string",
      "enum": [
        "VERIFICATION_TYPE_UNSPECIFIED",
        "VERIFICATION_TYPE_EMAIL"
      ],
      "default": "VERIFICATION_TYPE_UNSPECIFIED"
    },
    "v1VerifyAccountRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "The verification_token provided in the URL."
        },
        "namespace": {
          "$ref": "#/definitions/v1AccountNamespace",
          "description": "The namespace to verify the account in."
        },
        "type": {
          "$ref": "#/definitions/v1VerificationType",
          "description": "The verification type, will also be provided in the URL."
        }
      }
    },
    "v1VerifyAccountResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/v1AccountRegistrationStatus",
          "description": "Status of the account registration. If the token was valid and not expired, this should be\nACCOUNT_REGISTRATION_STATUS_OK. Otherwise, the user may have to re-verify. To re-verify, use the log in endpoint\nwith email and password, setting the verify flag to true."
        },
        "errorMessage": {
          "type": "string",
          "description": "If the status is ACCOUNT_REGISTRATION_STATUS_ERROR this will be a human-readable message."
        },
        "jwt": {
          "type": "string",
          "description": "If the token was valid, this will be a new login JWT."
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    }
  }
}
